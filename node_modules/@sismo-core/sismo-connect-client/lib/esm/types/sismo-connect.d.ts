import { RequestParams } from "./types";
import { SismoConnectResponse, SismoConnectConfig } from "./common-types";
import { GroupParams } from "./sdk";
export declare const SismoConnect: ({ config }: {
    config: SismoConnectConfig;
}) => SismoConnectClient;
export declare class SismoConnectClient {
    private _sdk;
    private _sismoConnectConfig;
    constructor({ config }: {
        config: SismoConnectConfig;
    });
    request: ({ claims, claim, auths, auth, signature, namespace, callbackPath, callbackUrl, }: RequestParams) => void;
    getRequestLink: ({ claims, claim, auths, auth, signature, namespace, callbackPath, callbackUrl, }: RequestParams) => string;
    getResponse: () => SismoConnectResponse | null;
    getGroup({ id, name, timestamp }: GroupParams): Promise<import("./sdk").GetGroupQueryOutput & {
        data: import("./sdk").FetchedData;
    }>;
    getResponseBytes: () => string | null;
}
